+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2020-03-11_09-28-17
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2020-03-11_09-28-17
+ python ./tools/train_net.py --device gpu --device_id 0 --weights data/pretrain_model/VGG_imagenet.npy --imdb voc_2007_trainval --iters 200 --cfg experiments/cfgs/faster_rcnn_end2end.yml --network VGGnet_train
voc_2007_train
voc_2007_val
voc_2007_trainval
voc_2007_test
kitti_train
kitti_val
kitti_trainval
kitti_test
nthu_71
nthu_370
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', device='gpu', device_id=0, imdb_name='voc_2007_trainval', max_iters=200, network_name='VGGnet_train', pretrained_model='data/pretrain_model/VGG_imagenet.npy', randomize=False, set_cfgs=None, solver=None)
Using config:
{'DATA_DIR': '/home/boot/ming/projects/Faster-RCNN_TF/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 0,
 'IS_MULTISCALE': False,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/boot/ming/projects/Faster-RCNN_TF/models/pascal_voc',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/boot/ming/projects/Faster-RCNN_TF',
 'TEST': {'BBOX_REG': True,
          'DEBUG_TIMELINE': False,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'DEBUG_TIMELINE': False,
           'DISPLAY': 10,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'GAMMA': 0.1,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'LEARNING_RATE': 0.001,
           'MAX_SIZE': 1000,
           'MOMENTUM': 0.9,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 200,
           'SNAPSHOT_PREFIX': 'VGGnet_fast_rcnn',
           'STEPSIZE': 200,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
<bound method imdb.default_roidb of <datasets.pascal_voc.pascal_voc object at 0x7fb8647d3f60>>
Loaded dataset `voc_2007_trainval` for training
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /home/boot/ming/projects/Faster-RCNN_TF/data/cache/voc_2007_trainval_gt_roidb.pkl
done
Preparing training data...
done
Output will be saved to `/home/boot/ming/projects/Faster-RCNN_TF/output/faster_rcnn_end2end/voc_2007_trainval`
/gpu:0
Tensor("Placeholder:0", shape=(?, ?, ?, 3), dtype=float32)
Tensor("conv5_3/conv5_3:0", shape=(?, ?, ?, 512), dtype=float32)
Tensor("rpn_cls_score/rpn_cls_score:0", shape=(?, ?, ?, 18), dtype=float32)
Tensor("Placeholder_2:0", shape=(?, 5), dtype=float32)
Tensor("Placeholder_1:0", shape=(?, 3), dtype=float32)
Tensor("Placeholder:0", shape=(?, ?, ?, 3), dtype=float32)
Tensor("rpn_conv/3x3/rpn_conv/3x3:0", shape=(?, ?, ?, 512), dtype=float32)
Tensor("rpn_cls_score/rpn_cls_score:0", shape=(?, ?, ?, 18), dtype=float32)
Tensor("rpn_cls_prob:0", shape=(?, ?, ?, ?), dtype=float32)
Tensor("rpn_cls_prob_reshape:0", shape=(?, ?, ?, 18), dtype=float32)
Tensor("rpn_bbox_pred/rpn_bbox_pred:0", shape=(?, ?, ?, 36), dtype=float32)
Tensor("Placeholder_1:0", shape=(?, 3), dtype=float32)
Tensor("rpn_rois:0", shape=(?, 5), dtype=float32)
Tensor("Placeholder_2:0", shape=(?, 5), dtype=float32)
Tensor("conv5_3/conv5_3:0", shape=(?, ?, ?, 512), dtype=float32)
(<tf.Tensor 'roi-data/rois:0' shape=(?, 5) dtype=float32>, <tf.Tensor 'roi-data/Cast:0' shape=<unknown> dtype=int32>, <tf.Tensor 'roi-data/PyFunc:2' shape=<unknown> dtype=float32>, <tf.Tensor 'roi-data/PyFunc:3' shape=<unknown> dtype=float32>, <tf.Tensor 'roi-data/PyFunc:4' shape=<unknown> dtype=float32>)
[<tf.Tensor 'conv5_3/conv5_3:0' shape=(?, ?, ?, 512) dtype=float32>, <tf.Tensor 'roi-data/rois:0' shape=(?, 5) dtype=float32>]
Tensor("drop7/mul:0", shape=(?, 4096), dtype=float32)
Use network `VGGnet_train` in training
Filtered 0 roidb entries: 10022 -> 10022
2020-03-11 09:28:20.076208: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2020-03-11 09:28:20.171874: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:964] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2020-03-11 09:28:20.172262: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1411] Found device 0 with properties: 
name: GeForce GTX 1080 Ti major: 6 minor: 1 memoryClockRate(GHz): 1.6325
pciBusID: 0000:01:00.0
totalMemory: 10.91GiB freeMemory: 10.08GiB
2020-03-11 09:28:20.172273: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1490] Adding visible gpu devices: 0
2020-03-11 09:28:20.374842: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-03-11 09:28:20.374866: I tensorflow/core/common_runtime/gpu/gpu_device.cc:977]      0 
2020-03-11 09:28:20.374872: I tensorflow/core/common_runtime/gpu/gpu_device.cc:990] 0:   N 
2020-03-11 09:28:20.375031: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1103] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 9747 MB memory) -> physical GPU (device: 0, name: GeForce GTX 1080 Ti, pci bus id: 0000:01:00.0, compute capability: 6.1)
Computing bounding-box regression targets...
bbox target means:
[[0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]]
[0. 0. 0. 0.]
bbox target stdevs:
[[0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]]
[0.1 0.1 0.2 0.2]
Normalizing targets
done
Solving...
/home/boot/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/gradients_impl.py:108: UserWarning: Converting sparse IndexedSlices to a dense Tensor of unknown shape. This may consume a large amount of memory.
  "Converting sparse IndexedSlices to a dense Tensor of unknown shape. "
Loading pretrained model weights from data/pretrain_model/VGG_imagenet.npy
assign pretrain model weights to conv5_1
assign pretrain model biases to conv5_1
assign pretrain model weights to fc6
assign pretrain model biases to fc6
assign pretrain model weights to conv5_3
assign pretrain model biases to conv5_3
assign pretrain model weights to conv5_2
assign pretrain model biases to conv5_2
ignore fc8
ignore fc8
assign pretrain model weights to fc7
assign pretrain model biases to fc7
assign pretrain model weights to conv4_1
assign pretrain model biases to conv4_1
assign pretrain model weights to conv4_2
assign pretrain model biases to conv4_2
assign pretrain model weights to conv4_3
assign pretrain model biases to conv4_3
assign pretrain model weights to conv3_3
assign pretrain model biases to conv3_3
assign pretrain model weights to conv3_2
assign pretrain model biases to conv3_2
assign pretrain model weights to conv3_1
assign pretrain model biases to conv3_1
assign pretrain model weights to conv1_1
assign pretrain model biases to conv1_1
assign pretrain model weights to conv1_2
assign pretrain model biases to conv1_2
assign pretrain model weights to conv2_2
assign pretrain model biases to conv2_2
assign pretrain model weights to conv2_1
assign pretrain model biases to conv2_1
iter: 10 / 200, total loss: 1.1105, rpn_loss_cls: 0.4330, rpn_loss_box: 0.0016, loss_cls: 0.3803, loss_box: 0.2957, lr: 0.001000
speed: 0.410s / iter
iter: 20 / 200, total loss: 1.9803, rpn_loss_cls: 0.3183, rpn_loss_box: 0.0490, loss_cls: 0.9947, loss_box: 0.6183, lr: 0.001000
speed: 0.380s / iter
iter: 30 / 200, total loss: 1.1795, rpn_loss_cls: 0.2940, rpn_loss_box: 0.0190, loss_cls: 0.6076, loss_box: 0.2589, lr: 0.001000
speed: 0.387s / iter
iter: 40 / 200, total loss: 0.8009, rpn_loss_cls: 0.5567, rpn_loss_box: 0.1729, loss_cls: 0.0710, loss_box: 0.0002, lr: 0.001000
speed: 0.357s / iter
iter: 50 / 200, total loss: 1.0509, rpn_loss_cls: 0.3662, rpn_loss_box: 0.0456, loss_cls: 0.4581, loss_box: 0.1810, lr: 0.001000
speed: 0.343s / iter
iter: 60 / 200, total loss: 0.6164, rpn_loss_cls: 0.4036, rpn_loss_box: 0.0412, loss_cls: 0.1486, loss_box: 0.0230, lr: 0.001000
speed: 0.328s / iter
iter: 70 / 200, total loss: 0.9731, rpn_loss_cls: 0.1874, rpn_loss_box: 0.0038, loss_cls: 0.5642, loss_box: 0.2177, lr: 0.001000
speed: 0.316s / iter
iter: 80 / 200, total loss: 2.1417, rpn_loss_cls: 0.2312, rpn_loss_box: 0.0330, loss_cls: 1.2958, loss_box: 0.5817, lr: 0.001000
speed: 0.307s / iter
iter: 90 / 200, total loss: 1.8996, rpn_loss_cls: 0.7447, rpn_loss_box: 0.1470, loss_cls: 0.7664, loss_box: 0.2415, lr: 0.001000
speed: 0.315s / iter
iter: 100 / 200, total loss: 1.9587, rpn_loss_cls: 0.1827, rpn_loss_box: 0.0959, loss_cls: 0.8579, loss_box: 0.8222, lr: 0.001000
speed: 0.301s / iter
iter: 110 / 200, total loss: 1.7463, rpn_loss_cls: 0.7424, rpn_loss_box: 0.1555, loss_cls: 0.6471, loss_box: 0.2014, lr: 0.001000
speed: 0.313s / iter
iter: 120 / 200, total loss: 2.7469, rpn_loss_cls: 0.5474, rpn_loss_box: 0.2317, loss_cls: 1.3556, loss_box: 0.6121, lr: 0.001000
speed: 0.313s / iter
iter: 130 / 200, total loss: 0.9219, rpn_loss_cls: 0.0892, rpn_loss_box: 0.0315, loss_cls: 0.5113, loss_box: 0.2899, lr: 0.001000
speed: 0.308s / iter
iter: 140 / 200, total loss: 1.0791, rpn_loss_cls: 0.1137, rpn_loss_box: 0.0744, loss_cls: 0.5682, loss_box: 0.3228, lr: 0.001000
speed: 0.293s / iter
iter: 150 / 200, total loss: 1.8787, rpn_loss_cls: 0.2096, rpn_loss_box: 0.0230, loss_cls: 1.0367, loss_box: 0.6094, lr: 0.001000
speed: 0.292s / iter
iter: 160 / 200, total loss: 0.8940, rpn_loss_cls: 0.1613, rpn_loss_box: 0.0132, loss_cls: 0.5136, loss_box: 0.2060, lr: 0.001000
speed: 0.288s / iter
iter: 170 / 200, total loss: 0.2676, rpn_loss_cls: 0.1519, rpn_loss_box: 0.0088, loss_cls: 0.1068, loss_box: 0.0001, lr: 0.001000
speed: 0.285s / iter
iter: 180 / 200, total loss: 2.5455, rpn_loss_cls: 1.1285, rpn_loss_box: 0.4565, loss_cls: 0.8680, loss_box: 0.0925, lr: 0.001000
speed: 0.283s / iter
iter: 190 / 200, total loss: 2.7835, rpn_loss_cls: 0.6682, rpn_loss_box: 0.1304, loss_cls: 1.3004, loss_box: 0.6845, lr: 0.001000
speed: 0.273s / iter
iter: 200 / 200, total loss: 3.2390, rpn_loss_cls: 0.9896, rpn_loss_box: 0.4091, loss_cls: 1.5142, loss_box: 0.3261, lr: 0.000100
speed: 0.279s / iter
Wrote snapshot to: /home/boot/ming/projects/Faster-RCNN_TF/output/faster_rcnn_end2end/voc_2007_trainval/VGGnet_fast_rcnn_iter_200.ckpt
done solving

real	1m15.401s
user	0m55.741s
sys	0m17.305s
+ set +x
+ python ./tools/test_net.py --device gpu --device_id 0 --weights /home/boot/ming/projects/Faster-RCNN_TF/output/faster_rcnn_end2end/voc_2007_trainval/VGGnet_fast_rcnn_iter_200.ckpt --imdb voc_2007_test --cfg experiments/cfgs/faster_rcnn_end2end.yml --network VGGnet_test
voc_2007_train
voc_2007_val
voc_2007_trainval
voc_2007_test
kitti_train
kitti_val
kitti_trainval
kitti_test
nthu_71
nthu_370
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', comp_mode=False, device='gpu', device_id=0, imdb_name='voc_2007_test', model='/home/boot/ming/projects/Faster-RCNN_TF/output/faster_rcnn_end2end/voc_2007_trainval/VGGnet_fast_rcnn_iter_200.ckpt', network_name='VGGnet_test', prototxt=None, wait=True)
Using config:
{'DATA_DIR': '/home/boot/ming/projects/Faster-RCNN_TF/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 0,
 'IS_MULTISCALE': False,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/boot/ming/projects/Faster-RCNN_TF/models/pascal_voc',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/boot/ming/projects/Faster-RCNN_TF',
 'TEST': {'BBOX_REG': True,
          'DEBUG_TIMELINE': False,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'DEBUG_TIMELINE': False,
           'DISPLAY': 10,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'GAMMA': 0.1,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'LEARNING_RATE': 0.001,
           'MAX_SIZE': 1000,
           'MOMENTUM': 0.9,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 200,
           'SNAPSHOT_PREFIX': 'VGGnet_fast_rcnn',
           'STEPSIZE': 200,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
<bound method imdb.default_roidb of <datasets.pascal_voc.pascal_voc object at 0x7f1ec6bac2e8>>
/gpu:0
Tensor("Placeholder:0", shape=(?, ?, ?, 3), dtype=float32)
Tensor("conv5_3/conv5_3:0", shape=(?, ?, ?, 512), dtype=float32)
Tensor("rpn_conv/3x3/rpn_conv/3x3:0", shape=(?, ?, ?, 512), dtype=float32)
Tensor("rpn_cls_score/rpn_cls_score:0", shape=(?, ?, ?, 18), dtype=float32)
Tensor("rpn_cls_prob:0", shape=(?, ?, ?, ?), dtype=float32)
Tensor("rpn_cls_prob_reshape:0", shape=(?, ?, ?, 18), dtype=float32)
Tensor("rpn_bbox_pred/rpn_bbox_pred:0", shape=(?, ?, ?, 36), dtype=float32)
Tensor("Placeholder_1:0", shape=(?, 3), dtype=float32)
Tensor("conv5_3/conv5_3:0", shape=(?, ?, ?, 512), dtype=float32)
Tensor("rois:0", shape=(?, 5), dtype=float32)
[<tf.Tensor 'conv5_3/conv5_3:0' shape=(?, ?, ?, 512) dtype=float32>, <tf.Tensor 'rois:0' shape=(?, 5) dtype=float32>]
Tensor("fc7/fc7:0", shape=(?, 4096), dtype=float32)
Use network `VGGnet_test` in training
2020-03-11 09:29:34.096847: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2020-03-11 09:29:34.177093: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:964] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2020-03-11 09:29:34.177500: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1411] Found device 0 with properties: 
name: GeForce GTX 1080 Ti major: 6 minor: 1 memoryClockRate(GHz): 1.6325
pciBusID: 0000:01:00.0
totalMemory: 10.91GiB freeMemory: 10.08GiB
2020-03-11 09:29:34.177514: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1490] Adding visible gpu devices: 0
2020-03-11 09:29:34.371947: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-03-11 09:29:34.371989: I tensorflow/core/common_runtime/gpu/gpu_device.cc:977]      0 
2020-03-11 09:29:34.371994: I tensorflow/core/common_runtime/gpu/gpu_device.cc:990] 0:   N 
2020-03-11 09:29:34.372191: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1103] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 9747 MB memory) -> physical GPU (device: 0, name: GeForce GTX 1080 Ti, pci bus id: 0000:01:00.0, compute capability: 6.1)
Loading model weights from /home/boot/ming/projects/Faster-RCNN_TF/output/faster_rcnn_end2end/voc_2007_trainval/VGGnet_fast_rcnn_iter_200.ckpt
im_detect: 1/4952 1.195s 0.001s
im_detect: 2/4952 0.876s 0.001s
im_detect: 3/4952 0.756s 0.001s
im_detect: 4/4952 0.702s 0.001s
im_detect: 5/4952 0.573s 0.001s
im_detect: 6/4952 0.486s 0.001s
im_detect: 7/4952 0.491s 0.001s
im_detect: 8/4952 0.501s 0.001s
im_detect: 9/4952 0.451s 0.001s
im_detect: 10/4952 0.462s 0.001s
im_detect: 11/4952 0.425s 0.001s
im_detect: 12/4952 0.394s 0.001s
im_detect: 13/4952 0.404s 0.001s
im_detect: 14/4952 0.379s 0.001s
im_detect: 15/4952 0.384s 0.001s
im_detect: 16/4952 0.391s 0.001s
im_detect: 17/4952 0.385s 0.001s
im_detect: 18/4952 0.385s 0.001s
im_detect: 19/4952 0.367s 0.001s
im_detect: 20/4952 0.352s 0.001s
im_detect: 21/4952 0.338s 0.001s
im_detect: 22/4952 0.340s 0.001s
im_detect: 23/4952 0.328s 0.001s
im_detect: 24/4952 0.337s 0.001s
im_detect: 25/4952 0.325s 0.001s
im_detect: 26/4952 0.315s 0.001s
im_detect: 27/4952 0.305s 0.001s
im_detect: 28/4952 0.304s 0.001s
im_detect: 29/4952 0.295s 0.001s
im_detect: 30/4952 0.287s 0.001s
im_detect: 31/4952 0.280s 0.001s
im_detect: 32/4952 0.273s 0.001s
im_detect: 33/4952 0.283s 0.001s
im_detect: 34/4952 0.276s 0.001s
im_detect: 35/4952 0.269s 0.001s
im_detect: 36/4952 0.263s 0.001s
im_detect: 37/4952 0.258s 0.001s
im_detect: 38/4952 0.252s 0.001s
im_detect: 39/4952 0.259s 0.001s
im_detect: 40/4952 0.254s 0.001s
im_detect: 41/4952 0.254s 0.001s
im_detect: 42/4952 0.250s 0.001s
im_detect: 43/4952 0.245s 0.001s
im_detect: 44/4952 0.241s 0.001s
im_detect: 45/4952 0.244s 0.001s
im_detect: 46/4952 0.240s 0.001s
im_detect: 47/4952 0.236s 0.001s
im_detect: 48/4952 0.233s 0.001s
im_detect: 49/4952 0.229s 0.001s
im_detect: 50/4952 0.226s 0.001s
im_detect: 51/4952 0.222s 0.001s
im_detect: 52/4952 0.226s 0.001s
im_detect: 53/4952 0.222s 0.001s
im_detect: 54/4952 0.219s 0.001s
im_detect: 55/4952 0.227s 0.001s
im_detect: 56/4952 0.224s 0.001s
im_detect: 57/4952 0.221s 0.001s
im_detect: 58/4952 0.218s 0.001s
im_detect: 59/4952 0.215s 0.001s
im_detect: 60/4952 0.212s 0.001s
im_detect: 61/4952 0.210s 0.001s
im_detect: 62/4952 0.207s 0.001s
im_detect: 63/4952 0.205s 0.001s
im_detect: 64/4952 0.202s 0.001s
im_detect: 65/4952 0.200s 0.001s
im_detect: 66/4952 0.205s 0.001s
im_detect: 67/4952 0.203s 0.001s
im_detect: 68/4952 0.207s 0.001s
im_detect: 69/4952 0.205s 0.001s
im_detect: 70/4952 0.203s 0.001s
im_detect: 71/4952 0.201s 0.001s
im_detect: 72/4952 0.199s 0.001s
im_detect: 73/4952 0.197s 0.001s
im_detect: 74/4952 0.202s 0.001s
im_detect: 75/4952 0.205s 0.001s
im_detect: 76/4952 0.203s 0.001s
im_detect: 77/4952 0.202s 0.001s
im_detect: 78/4952 0.200s 0.001s
im_detect: 79/4952 0.204s 0.001s
im_detect: 80/4952 0.205s 0.001s
im_detect: 81/4952 0.203s 0.001s
im_detect: 82/4952 0.201s 0.001s
im_detect: 83/4952 0.202s 0.001s
im_detect: 84/4952 0.203s 0.001s
im_detect: 85/4952 0.201s 0.001s
im_detect: 86/4952 0.199s 0.001s
im_detect: 87/4952 0.200s 0.001s
im_detect: 88/4952 0.199s 0.001s
im_detect: 89/4952 0.197s 0.001s
im_detect: 90/4952 0.196s 0.001s
im_detect: 91/4952 0.194s 0.001s
im_detect: 92/4952 0.192s 0.001s
im_detect: 93/4952 0.196s 0.001s
im_detect: 94/4952 0.197s 0.001s
im_detect: 95/4952 0.201s 0.001s
im_detect: 96/4952 0.200s 0.001s
im_detect: 97/4952 0.198s 0.001s
im_detect: 98/4952 0.197s 0.001s
im_detect: 99/4952 0.195s 0.001s
im_detect: 100/4952 0.199s 0.001s
im_detect: 101/4952 0.202s 0.001s
im_detect: 102/4952 0.200s 0.001s
im_detect: 103/4952 0.199s 0.001s
im_detect: 104/4952 0.197s 0.001s
im_detect: 105/4952 0.196s 0.001s
im_detect: 106/4952 0.195s 0.001s
im_detect: 107/4952 0.193s 0.001s
im_detect: 108/4952 0.192s 0.001s
im_detect: 109/4952 0.191s 0.001s
im_detect: 110/4952 0.190s 0.001s
im_detect: 111/4952 0.188s 0.001s
im_detect: 112/4952 0.190s 0.001s
im_detect: 113/4952 0.189s 0.001s
im_detect: 114/4952 0.188s 0.001s
im_detect: 115/4952 0.191s 0.001s
im_detect: 116/4952 0.193s 0.001s
im_detect: 117/4952 0.192s 0.001s
im_detect: 118/4952 0.191s 0.001s
im_detect: 119/4952 0.190s 0.001s
im_detect: 120/4952 0.189s 0.001s
im_detect: 121/4952 0.187s 0.001s
im_detect: 122/4952 0.186s 0.001s
im_detect: 123/4952 0.185s 0.001s
im_detect: 124/4952 0.184s 0.001s
im_detect: 125/4952 0.183s 0.001s
im_detect: 126/4952 0.182s 0.001s
im_detect: 127/4952 0.181s 0.001s
im_detect: 128/4952 0.180s 0.001s
im_detect: 129/4952 0.179s 0.001s
im_detect: 130/4952 0.178s 0.001s
im_detect: 131/4952 0.177s 0.001s
im_detect: 132/4952 0.176s 0.001s
im_detect: 133/4952 0.179s 0.001s
im_detect: 134/4952 0.179s 0.001s
im_detect: 135/4952 0.178s 0.001s
im_detect: 136/4952 0.177s 0.001s
im_detect: 137/4952 0.176s 0.001s
im_detect: 138/4952 0.175s 0.001s
im_detect: 139/4952 0.174s 0.001s
im_detect: 140/4952 0.173s 0.001s
im_detect: 141/4952 0.175s 0.001s
im_detect: 142/4952 0.174s 0.001s
im_detect: 143/4952 0.174s 0.001s
im_detect: 144/4952 0.173s 0.001s
im_detect: 145/4952 0.172s 0.001s
im_detect: 146/4952 0.171s 0.001s
im_detect: 147/4952 0.170s 0.001s
im_detect: 148/4952 0.170s 0.001s
im_detect: 149/4952 0.169s 0.001s
im_detect: 150/4952 0.171s 0.001s
im_detect: 151/4952 0.170s 0.001s
im_detect: 152/4952 0.169s 0.001s
im_detect: 153/4952 0.168s 0.001s
im_detect: 154/4952 0.168s 0.001s
im_detect: 155/4952 0.167s 0.001s
im_detect: 156/4952 0.166s 0.001s
im_detect: 157/4952 0.165s 0.001s
im_detect: 158/4952 0.165s 0.001s
im_detect: 159/4952 0.164s 0.001s
im_detect: 160/4952 0.163s 0.001s
im_detect: 161/4952 0.163s 0.001s
im_detect: 162/4952 0.162s 0.001s
im_detect: 163/4952 0.161s 0.001s
im_detect: 164/4952 0.163s 0.001s
im_detect: 165/4952 0.162s 0.001s
im_detect: 166/4952 0.162s 0.001s
im_detect: 167/4952 0.161s 0.001s
im_detect: 168/4952 0.164s 0.001s
im_detect: 169/4952 0.163s 0.001s
im_detect: 170/4952 0.162s 0.001s
im_detect: 171/4952 0.162s 0.001s
im_detect: 172/4952 0.161s 0.001s
im_detect: 173/4952 0.160s 0.001s
im_detect: 174/4952 0.160s 0.001s
im_detect: 175/4952 0.160s 0.001s
im_detect: 176/4952 0.159s 0.001s
im_detect: 177/4952 0.159s 0.001s
im_detect: 178/4952 0.160s 0.001s
im_detect: 179/4952 0.160s 0.001s
im_detect: 180/4952 0.159s 0.001s
im_detect: 181/4952 0.159s 0.001s
im_detect: 182/4952 0.158s 0.001s
im_detect: 183/4952 0.160s 0.001s
im_detect: 184/4952 0.159s 0.001s
im_detect: 185/4952 0.159s 0.001s
im_detect: 186/4952 0.158s 0.001s
im_detect: 187/4952 0.158s 0.001s
im_detect: 188/4952 0.157s 0.001s
im_detect: 189/4952 0.157s 0.001s
im_detect: 190/4952 0.156s 0.001s
im_detect: 191/4952 0.156s 0.001s
im_detect: 192/4952 0.155s 0.001s
im_detect: 193/4952 0.154s 0.001s
im_detect: 194/4952 0.154s 0.001s
